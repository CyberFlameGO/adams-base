# Project: adams
# Date: 2014-01-23 15:37:22
# User: fracpete
#
adams.flow.control.Flow
	-annotation
	Flow to demonstrate how to display rectangles from GPS locations \nfrom a spreadsheet on a map.
	-actor
		adams.flow.standalone.CallableActors
			-actor
				adams.flow.sink.DisplayPanelManager
					-name
					Locations
					-width
					740
					-x
					-3
					-provider
						adams.flow.sink.SpreadSheetDisplay
							-name
							Locations
							-short-title
							true
							-x
							-3
					-entry-name-variable
					name
			-actor
				adams.flow.sink.OpenStreetMapViewer
					-name
					Map
					-short-title
					true
					-writer
						adams.gui.print.NullWriter
					-tile-source
						adams.flow.sink.openstreetmapviewer.OpenStreetMapSource
					-tile-loader
						adams.flow.sink.openstreetmapviewer.OpenStreetMapCachedLoader
					-hit-listener
						adams.flow.sink.openstreetmapviewer.SimpleMapObjectHitListener
					-mapobject-pruner
						adams.flow.sink.openstreetmapviewer.NullPruner
					-map-overlay
						adams.flow.sink.openstreetmapviewer.ImageMapOverlay
							-x
							-2
							-y
							-3
							-image-file
							${EXAMPLE_FLOWS}/data/adams_logo.png
							-scale
							0.75
					-initial-zoom
					1
					-layer-tree
					true
					-layer
					Location
	-actor
		adams.flow.source.FileSupplier
			-file
			${EXAMPLE_FLOWS}/data/gps.csv
	-actor
		adams.flow.transformer.SpreadSheetFileReader
			-reader
				adams.data.io.input.CsvSpreadSheetReader
					-spreadsheet-type
						adams.data.spreadsheet.SpreadSheet
	-actor
		adams.flow.control.Tee
			-name
			display original spreadsheet
			-tee
				adams.flow.transformer.SetVariable
					-var-name
					name
					-var-value
					original
			-tee
				adams.flow.sink.CallableSink
					-callable
					Locations
	-actor
		adams.flow.transformer.Convert
			-name
			join long1 and lat1
			-conversion
				adams.data.conversion.SpreadSheetJoinColumns
					-columns
					long1,lat1
					-glue
					 
					-column-name
					gps1
	-actor
		adams.flow.transformer.Convert
			-name
			join long2 and lat2
			-conversion
				adams.data.conversion.SpreadSheetJoinColumns
					-columns
					long2,lat2
					-glue
					 
					-column-name
					gps2
	-actor
		adams.flow.transformer.Convert
			-name
			create 1st GPS object column
			-conversion
				adams.data.conversion.SpreadSheetStringColumnToObject
					-column
					gps1
					-keep-failed
					true
					-handler
						adams.data.spreadsheet.GPSDecimalDegrees
							-swapped
							true
	-actor
		adams.flow.transformer.Convert
			-name
			create 2nd GPS object column
			-conversion
				adams.data.conversion.SpreadSheetStringColumnToObject
					-column
					gps2
					-keep-failed
					true
					-handler
						adams.data.spreadsheet.GPSDecimalDegrees
							-swapped
							true
	-actor
		adams.flow.control.Branch
			-branch
				adams.flow.control.Sequence
					-name
					map
					-actor
						adams.flow.transformer.Convert
							-name
							create mapobjects
							-conversion
								adams.data.conversion.SpreadSheetToMapObjects
									-generator
										adams.data.conversion.mapobject.SimpleRectangleGenerator
											-layer
											Location
											-top-left
											gps1
											-bottom-right
											gps2
											-name
											name
											-additional-attributes
											meta
											-fill-color
											#32646464
					-actor
						adams.flow.sink.CallableSink
							-callable
							Map
			-branch
				adams.flow.control.Sequence
					-name
					spreadsheet
					-actor
						adams.flow.transformer.SetVariable
							-var-name
							name
							-var-value
							GPS objects
					-actor
						adams.flow.sink.CallableSink
							-callable
							Locations
	-flow-execution-listener
		adams.flow.execution.NullListener


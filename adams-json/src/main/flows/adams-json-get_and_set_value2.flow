# Project: adams
# Date: 2019-12-17 10:16:49
# User: fracpete
# Charset: UTF-8
# Modules: adams-core,adams-json
#
adams.flow.control.Flow -annotation "Gets and sets values specified for matching paths.\\nFor more information on JsonPath:\\nhttps://github.com/json-path/JsonPath" -flow-execution-listener adams.flow.execution.NullListener -flow-restart-manager adams.flow.control.flowrestart.NullManager
 adams.flow.standalone.CallableActors
  adams.flow.sink.Display -name Values -short-title true -display-type adams.flow.core.displaytype.Default -x -3 -writer adams.data.io.output.NullWriter
  adams.flow.sink.JsonDisplay -name Input -short-title true -display-type adams.flow.core.displaytype.Default -writer adams.gui.print.NullWriter -preview true -expand true -sort-keys true
 adams.flow.source.FileSupplier -file ${FLOWS}/data/books.json
 adams.flow.transformer.JsonFileReader -type OBJECT
 adams.flow.control.Tee
  adams.flow.sink.CallableSink -callable Input
 adams.flow.control.Tee -name before
  adams.flow.transformer.GetJsonValue -annotation "retrieves all books that cost more than 10.00" -path "$.book[?(@.price > 10)]" -data-type ARRAY
  adams.flow.transformer.Convert -conversion adams.data.conversion.AnyToString
  adams.flow.transformer.StringInsert -position first -value before:\\n
  adams.flow.sink.CallableSink -callable Values
 adams.flow.transformer.SetJsonValue -annotation "sets all prices that are more than 10.00 to 5.00" -path "$.book[?(@.price > 10)].price" -value 5.00 -conversion adams.data.conversion.StringToDouble
 adams.flow.control.Tee -name after
  adams.flow.transformer.GetJsonValue -annotation "retrieves all books that cost 5.00" -path "$.book[?(@.price == 5.00)]" -data-type ARRAY
  adams.flow.transformer.Convert -conversion adams.data.conversion.AnyToString
  adams.flow.transformer.StringInsert -position first -value \\nafter:\\n
  adams.flow.sink.CallableSink -callable Values
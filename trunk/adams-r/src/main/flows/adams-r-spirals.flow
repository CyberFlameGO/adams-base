# Project: adams
# Date: 2014-01-23 15:39:32
# User: fracpete
#
adams.flow.control.Flow
	-annotation
	Demonstrates how to use Rserve in parallel by making some nice spirals.
	-actor
		adams.flow.standalone.SetVariable
			-name
			radius
			-var-name
			radius
			-var-value
			50
	-actor
		adams.flow.standalone.SetVariable
			-name
			max
			-var-name
			max
			-var-value
			2000
	-actor
		adams.flow.standalone.SetVariable
			-name
			loops
			-var-name
			loops
			-var-value
			6
	-actor
		adams.flow.standalone.CallableActors
			-actor
				adams.flow.sink.SequencePlotter
					-width
					900
					-height
					800
					-writer
						adams.gui.print.NullWriter
					-comparison
					X_AND_Y
					-paintlet
						adams.gui.visualization.sequence.DotPaintlet
					-overlay-paintlet
						adams.gui.visualization.sequence.CirclePaintlet
					-marker-paintlet
						adams.flow.sink.sequenceplotter.NoMarkers
					-error-paintlet
						adams.flow.sink.sequenceplotter.NoErrorPaintlet
					-color-provider
						adams.gui.visualization.core.DefaultColorProvider
					-overlay-color-provider
						adams.gui.visualization.core.DefaultColorProvider
					-title
					R Demo
					-axis-x
						adams.gui.visualization.core.AxisPanelOptions
							-label
							x
							-tick-generator
								adams.gui.visualization.core.axis.FancyTickGenerator
							-nth-value
							1
							-width
							40
							-custom-format
							0
					-axis-y
						adams.gui.visualization.core.AxisPanelOptions
							-label
							y
							-tick-generator
								adams.gui.visualization.core.axis.FancyTickGenerator
							-nth-value
							1
							-width
							40
							-custom-format
							0
					-plot-updater
						adams.flow.sink.sequenceplotter.SimplePlotUpdater
							-update-interval
							100
					-post-processor
						adams.flow.sink.sequenceplotter.PassThrough
	-actor
		adams.flow.source.Start
	-actor
		adams.flow.control.Branch
			-branch
				adams.flow.control.Trigger
					-tee
						adams.flow.standalone.Rserve
							-logging-level
							INFO
					-tee
						adams.flow.source.ForLoop
							-lower
							0
							-upper
							@{max}
					-tee
						adams.flow.transformer.RTransformer
							-script
							offset <- 2*@{radius}\nscale <- @{radius} * (@{max} - X) / @{max} \nx <- cos(X*pi/@{max}*(@{loops}*2))\ny <- sin(X*pi/@{max}*(@{loops}*2))\nc(offset + scale * x, offset + scale * y)
							-return-type
							DoubleArray
					-tee
						adams.flow.transformer.MakePlotContainer
					-tee
						adams.flow.sink.CallableSink
							-callable
							SequencePlotter
			-branch
				adams.flow.control.Trigger
					-name
					Trigger-1
					-tee
						adams.flow.standalone.Rserve
							-logging-level
							INFO
							-port
							6312
					-tee
						adams.flow.source.ForLoop
							-lower
							0
							-upper
							@{max}
					-tee
						adams.flow.transformer.RTransformer
							-script
							offset <- 2*@{radius}\nscale <- 0.95 * @{radius} * X / @{max} \nx <- cos((@{max}-X)*pi/@{max}*(@{loops}*2))\ny <- sin((@{max}-X)*pi/@{max}*(@{loops}*2))\nc(offset + scale * x, offset + scale * y)
							-return-type
							DoubleArray
					-tee
						adams.flow.transformer.MakePlotContainer
					-tee
						adams.flow.sink.CallableSink
							-callable
							SequencePlotter
	-flow-execution-listener
		adams.flow.execution.ExecutionLog
			-log-file
			${HOME}/temp/r.log


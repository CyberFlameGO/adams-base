# Project: adams
# Date: 2016-02-15 14:59:14
# User: fracpete
# Charset: UTF-8
adams.flow.control.Flow -annotation "Iterates over all cells (row-wise) and outputs their values." -flow-execution-listener adams.flow.execution.NullListener
 adams.flow.source.FileSupplier -file ${FLOWS}/data/bolts.csv
 adams.flow.transformer.SpreadSheetFileReader -reader "adams.data.io.input.CsvSpreadSheetReader -data-row-type adams.data.spreadsheet.DenseDataRow -spreadsheet-type adams.data.spreadsheet.SpreadSheet"
 adams.flow.transformer.SetStorageValue -storage-name spreadsheet
 adams.flow.control.Tee -name "# columns"
  adams.flow.transformer.SpreadSheetInfo -type NUM_COLUMNS
  adams.flow.transformer.SetVariable -var-name cols
 adams.flow.control.Tee -name "# rows"
  adams.flow.transformer.SpreadSheetInfo
  adams.flow.transformer.SetVariable -var-name rows
 adams.flow.control.Trigger -name "iterate over rows"
  adams.flow.source.ForLoop -upper @{rows}
  adams.flow.transformer.SetVariable -var-name row
  adams.flow.control.Trigger -name "iterate over cells in row"
   adams.flow.source.ForLoop -upper @{cols}
   adams.flow.transformer.SetVariable -var-name col
   adams.flow.control.Trigger -name "output cell"
    adams.flow.source.StorageValue -storage-name spreadsheet
    adams.flow.transformer.SpreadSheetGetCell -row @{row} -col @{col} -empty N/A
    adams.flow.transformer.Convert -conversion adams.data.conversion.AnyToString
    adams.flow.transformer.StringReplace -find ^ -replace "@{row}/@{col}: " -variable true
    adams.flow.sink.Display -writer adams.data.io.output.NullWriter

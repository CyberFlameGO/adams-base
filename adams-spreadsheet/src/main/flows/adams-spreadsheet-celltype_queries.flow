# Project: adams
# Date: 2016-02-15 14:56:44
# User: fracpete
# Charset: UTF-8
adams.flow.control.Flow -annotation "Shows how to select rows based on the cell type of a column/attribute." -flow-execution-listener adams.flow.execution.NullListener
 adams.flow.standalone.CallableActors
  adams.flow.sink.DisplayPanelManager -provider "adams.flow.sink.SpreadSheetDisplay -writer adams.data.io.output.NullWriter" -entry-name-variable name
 adams.flow.source.FileSupplier -file ${FLOWS}/data/celltype.csv
 adams.flow.transformer.SpreadSheetFileReader -reader "adams.data.io.input.CsvSpreadSheetReader -data-row-type adams.data.spreadsheet.DenseDataRow -spreadsheet-type adams.data.spreadsheet.SpreadSheet"
 adams.flow.control.Branch -num-threads 1
  adams.flow.control.Sequence -name original
   adams.flow.transformer.SetVariable -var-name name -var-value original
   adams.flow.sink.CallableSink -callable DisplayPanelManager
  adams.flow.control.Sequence -name string
   adams.flow.transformer.SetVariable -var-name name -var-value string
   adams.flow.transformer.SpreadSheetQuery -query "SELECT * WHERE CELLTYPE(anyvalue) = \\\"string\\\""
   adams.flow.sink.CallableSink -callable DisplayPanelManager
  adams.flow.control.Sequence -name boolean
   adams.flow.transformer.SetVariable -var-name name -var-value boolean
   adams.flow.transformer.SpreadSheetQuery -query "SELECT * WHERE CELLTYPE(anyvalue) = \\\"boolean\\\""
   adams.flow.sink.CallableSink -callable DisplayPanelManager
  adams.flow.control.Sequence -name numeric
   adams.flow.transformer.SetVariable -var-name name -var-value numeric
   adams.flow.transformer.SpreadSheetQuery -query "SELECT * WHERE CELLTYPE(anyvalue) = \\\"numeric\\\""
   adams.flow.sink.CallableSink -callable DisplayPanelManager
  adams.flow.control.Sequence -name long
   adams.flow.transformer.SetVariable -var-name name -var-value long
   adams.flow.transformer.SpreadSheetQuery -query "SELECT * WHERE CELLTYPE(anyvalue) = \\\"long\\\""
   adams.flow.sink.CallableSink -callable DisplayPanelManager
  adams.flow.control.Sequence -name double
   adams.flow.transformer.SetVariable -var-name name -var-value double
   adams.flow.transformer.SpreadSheetQuery -query "SELECT * WHERE CELLTYPE(anyvalue) = \\\"double\\\""
   adams.flow.sink.CallableSink -callable DisplayPanelManager
  adams.flow.control.Sequence -name time
   adams.flow.transformer.SetVariable -var-name name -var-value time
   adams.flow.transformer.SpreadSheetQuery -query "SELECT * WHERE CELLTYPE(anyvalue) = \\\"time\\\""
   adams.flow.sink.CallableSink -callable DisplayPanelManager
  adams.flow.control.Sequence -name date
   adams.flow.transformer.SetVariable -var-name name -var-value date
   adams.flow.transformer.SpreadSheetQuery -query "SELECT * WHERE CELLTYPE(anyvalue) = \\\"date\\\""
   adams.flow.sink.CallableSink -callable DisplayPanelManager
  adams.flow.control.Sequence -name timestamp
   adams.flow.transformer.SetVariable -var-name name -var-value timestamp
   adams.flow.transformer.SpreadSheetQuery -query "SELECT * WHERE CELLTYPE(anyvalue) = \\\"timestamp\\\""
   adams.flow.sink.CallableSink -callable DisplayPanelManager
  adams.flow.control.Sequence -name anydate
   adams.flow.transformer.SetVariable -var-name name -var-value anydate
   adams.flow.transformer.SpreadSheetQuery -query "SELECT * WHERE CELLTYPE(anyvalue) = \\\"anydate\\\""
   adams.flow.sink.CallableSink -callable DisplayPanelManager
  adams.flow.control.Sequence -name !object
   adams.flow.transformer.SetVariable -var-name name -var-value !object
   adams.flow.transformer.SpreadSheetQuery -query "SELECT * WHERE NOT CELLTYPE(anyvalue) = \\\"object\\\""
   adams.flow.sink.CallableSink -callable DisplayPanelManager
  adams.flow.control.Sequence -name missing
   adams.flow.transformer.SetVariable -var-name name -var-value missing
   adams.flow.transformer.SpreadSheetQuery -query "SELECT * WHERE CELLTYPE(anyvalue) = \\\"missing\\\""
   adams.flow.sink.CallableSink -callable DisplayPanelManager

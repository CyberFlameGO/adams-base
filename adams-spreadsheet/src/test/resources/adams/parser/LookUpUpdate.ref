--> out-0
': key,value
A,1
B,2
C,3

'if (C = 2) then C := A * B; end: key,value
A,1
B,2
C,3

'if (C = 3) then C := A * B + 0.1; else C := A + 10; end: key,value
A,1
B,2
C,2.1

'C := 5;: key,value
A,1
B,2
C,5

'if (C = 2) then C := A * B + 0.1; E := "A*B+0.1"; else C := A + 10; E := "A+10"; end: key,value
A,1
B,2
C,11
E,A+10

'if (C = 2) then C := A * B + 0.1; end D := 0.5; E := "updated";: key,value
A,1
B,2
C,3
D,0.5
E,updated

'all(".*") := 0.33;: key,value
A,0.33
B,0.33
C,0.33

'C := -5;: key,value
A,1
B,2
C,-5

'if (C = 2) then all(".*") := 0.12; else all(".*") := 0.78; end: key,value
A,0.78
B,0.78
C,0.78

'if ([_Hello World] = 1) then C := 1.3; end' using _Hello World=1: key,value
A,1
B,2
C,1.3

'if ('Hello World' = 1) then C := 4.5; end' using Hello World=1: key,value
A,1
B,2
C,4.5
"Hello World",1

'C := [Hello World];' using Hello World=9.9: key,value
A,1
B,2
C,9.9
"Hello World",9.9

'C := '_Hello World';' using _Hello World=9.9: key,value
A,1
B,2
C,9.9

'C := has('_Hello World');' using _Hello World=9.9: key,value
A,1
B,2
C,true

'if (_var = "some string") then C := -1.0; end' using _var=some string: key,value
A,1
B,2
C,-1

'if (_var != "some string") then C := -1.0; end' using _var=some string: key,value
A,1
B,2
C,3

'if (matches(_var, "^.*ome str.*$")) then C := -1.0; end' using _var=some string: key,value
A,1
B,2
C,-1

'if (substr(_var, 4) == "e string") then C := -1.0; end' using _var=some string: key,value
A,1
B,2
C,-1

'if (left(_var, 4) == "some") then C := -1.0; end' using _var=some string: key,value
A,1
B,2
C,-1

'if (right(_var, 4) == "ring") then C := -1.0; end' using _var=some string: key,value
A,1
B,2
C,-1

'if (mid(_var, 4, 4) == "e st") then C := -1.0; end' using _var=some string: key,value
A,1
B,2
C,-1

'_v := trim(rept(" Yo ", 3)); C := _v;: key,value
A,1
B,2
C,"Yo  Yo  Yo"

'_v := trim(rept(" Yo ", 3)); C := len(_v);: key,value
A,1
B,2
C,10

'C := find("str", _var);' using _var=some string: key,value
A,1
B,2
C,6

'C := contains(_var, "str");' using _var=some string: key,value
A,1
B,2
C,true

'C := replace(_var, 3, 5, "STR");' using _var=some string: key,value
A,1
B,2
C,soSTRring

'C := replaceall(_var, "s[ot]", "S.");' using _var=some string: key,value
A,1
B,2
C,"S.me S.ring"

'C := substitute(_var, "s", "S");' using _var=some string: key,value
A,1
B,2
C,"Some String"

'C := concatenate(str(_num, 1), " ", str(_num, 3));' using _num=1.234: key,value
A,1
B,2
C,"1.2 1.234"



# Project: adams
# Date: 2016-02-15 11:28:00
# User: fracpete
# Charset: UTF-8
adams.flow.control.Flow -annotation "This flow demonstrates how to process and access the elements\\nof an array. Processing, as in converting the String array into a\\nDouble array. Accessing elements, as in retrieving a value and\\nwriting back another value." -flow-execution-listener adams.flow.execution.NullListener
 adams.flow.standalone.CallableActors
  adams.flow.sink.Display -writer adams.data.io.output.NullWriter
 adams.flow.standalone.SetVariable -var-name index -var-value 5
 adams.flow.source.StringConstants -output-array true -string 1 -string 2 -string 3 -string 4 -string 5 -string 6 -string 7 -string 8 -string 9 -string 10
 adams.flow.control.ArrayProcess -array-class java.lang.Double
  adams.flow.transformer.Convert -conversion adams.data.conversion.StringToDouble
 adams.flow.control.Tee -name before
  adams.flow.transformer.GetArrayElement -index @{index}
  adams.flow.transformer.Convert -conversion adams.data.conversion.AnyToString
  adams.flow.transformer.StringReplace -find ^ -replace "before: "
  adams.flow.sink.CallableSink -callable Display
 adams.flow.transformer.SetArrayElement -index 5 -value 5.5
 adams.flow.control.Tee -name after
  adams.flow.transformer.GetArrayElement -index @{index}
  adams.flow.transformer.Convert -conversion adams.data.conversion.AnyToString
  adams.flow.transformer.StringReplace -find ^ -replace "after: "
  adams.flow.sink.CallableSink -callable Display
 adams.flow.transformer.ArrayToSequence
 adams.flow.sink.CallableSink -callable Display

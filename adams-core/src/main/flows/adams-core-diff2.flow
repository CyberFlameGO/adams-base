# Project: adams
# Date: 2017-07-17 17:22:02
# User: fracpete
# Charset: UTF-8
adams.flow.control.Flow -annotation "Compares two files (order irrelevant) and outputs the common elements and the ones that differ.\\nUses hashset data structures to achieve this." -flow-execution-listener adams.flow.execution.NullListener
 adams.flow.standalone.TabView
  adams.flow.sink.Display -name Files -writer adams.data.io.output.NullWriter
  adams.flow.sink.Display -name "1st file" -writer adams.data.io.output.NullWriter
  adams.flow.sink.Display -name "2nd file" -writer adams.data.io.output.NullWriter
  adams.flow.sink.Display -name Common -writer adams.data.io.output.NullWriter
  adams.flow.sink.Display -name "Additional in 1st" -writer adams.data.io.output.NullWriter
  adams.flow.sink.Display -name "Additional in 2nd" -writer adams.data.io.output.NullWriter
 adams.flow.source.Start
 adams.flow.control.Trigger -name "prompt user"
  adams.flow.source.EnterManyValues -stop-if-canceled true -value "adams.flow.source.valuedefinition.DefaultValueDefinition -name first_file -display \"First text file\" -type FILE_ABSOLUTE -default-value ${CWD}" -value "adams.flow.source.valuedefinition.DefaultValueDefinition -name second_file -display \"Second text file\" -type FILE_ABSOLUTE -default-value ${CWD}" -output-type MAP
  adams.flow.transformer.MapToVariables
 adams.flow.control.Trigger -name "file names"
  adams.flow.source.CombineVariables -expression "1st file:\\n  @{first_file}\\n2nd file:\\n  @{second_file}" -conversion adams.data.conversion.StringToString
  adams.flow.sink.CallableSink -callable Files
 adams.flow.control.Trigger -name "load 1st"
  adams.flow.source.Variable -var-name first_file -conversion adams.data.conversion.StringToString
  adams.flow.transformer.TextFileReader -reader adams.data.io.input.LineArrayTextReader
  adams.flow.control.Tee
   adams.flow.transformer.StringJoin -glue \n
   adams.flow.sink.CallableSink -callable "1st file"
  adams.flow.transformer.SetStorageValue -storage-name first_file
  adams.flow.transformer.HashSetInit -storage-name first_hashset
 adams.flow.control.Trigger -name "load 2nd"
  adams.flow.source.Variable -var-name second_file -conversion adams.data.conversion.StringToString
  adams.flow.transformer.TextFileReader -reader adams.data.io.input.LineArrayTextReader
  adams.flow.control.Tee
   adams.flow.transformer.StringJoin -glue \n
   adams.flow.sink.CallableSink -callable "2nd file"
  adams.flow.transformer.SetStorageValue -storage-name second_file
  adams.flow.transformer.HashSetInit -storage-name second_hashset
 adams.flow.control.Trigger -name "common elements"
  adams.flow.standalone.HashSetInit -storage-name common_hashset
  adams.flow.source.StorageValue -storage-name second_file -conversion adams.data.conversion.UnknownToUnknown
  adams.flow.transformer.ArrayToSequence
  adams.flow.control.Continue -condition "adams.flow.condition.bool.Not -condition \"adams.flow.condition.bool.HashSet -storage-name first_hashset\""
  adams.flow.transformer.HashSetAdd -storage-name common_hashset
  adams.flow.sink.CallableSink -callable Common
 adams.flow.control.Trigger -name "additional in 1st"
  adams.flow.source.StorageValue -storage-name first_file -conversion adams.data.conversion.UnknownToUnknown
  adams.flow.transformer.ArrayToSequence
  adams.flow.control.Continue -condition "adams.flow.condition.bool.HashSet -storage-name common_hashset"
  adams.flow.sink.CallableSink -callable "Additional in 1st"
 adams.flow.control.Trigger -name "additional in 2nd"
  adams.flow.source.StorageValue -storage-name second_file -conversion adams.data.conversion.UnknownToUnknown
  adams.flow.transformer.ArrayToSequence
  adams.flow.control.Continue -condition "adams.flow.condition.bool.HashSet -storage-name common_hashset"
  adams.flow.sink.CallableSink -callable "Additional in 2nd"
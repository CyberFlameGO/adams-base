# Project: adams
# Date: 2021-05-21 10:58:37
# User: fracpete
# Charset: UTF-8
# Modules: adams-core,adams-imaging,adams-json,adams-spreadsheet,adams-xml
#
adams.flow.control.Flow -annotation "Converts ADAMS point annotations to DeepLabCut annotations." -flow-execution-listener adams.flow.execution.NullListener -flow-restart-manager adams.flow.control.flowrestart.NullManager
 adams.flow.standalone.CallableActors
  adams.flow.sink.ProgressBar -display-type adams.flow.core.displaytype.Default -writer adams.gui.print.NullWriter -max @{max}
 adams.flow.source.Start
 adams.flow.control.Trigger -name "prompt user"
  adams.flow.standalone.SetVariable -name "restore file" -var-name restore -var-value @{flow_filename_long}.props -value-type FILE_FORWARD_SLASHES -expand-value true
  adams.flow.source.EnterManyValues -name Parameters -stop-if-canceled true -value "adams.flow.source.valuedefinition.DirectoryValueDefinition -name input_dir -display \"Input directory\" -help \"The directory with the images and ADAMS annotation reports.\" -file-chooser-title \"Input dir\" -use-forward-slashes true" -value "adams.flow.source.valuedefinition.DefaultValueDefinition -name labels -display \"Labels (blank-separated list)\" -help \"The labels to include in the output\" -default-value \"joint1 joint2\"" -value "adams.flow.source.valuedefinition.DefaultValueDefinition -name file_prefix -display \"File prefix\" -help \"The prefix to use for the files in the CSV file (relative directory).\"" -value "adams.flow.source.valuedefinition.DefaultValueDefinition -name annotations_file -display \"Annotations file\" -help \"The CSV file in the output directory to store the DeepLabCut annotations in\" -default-value annotations.csv" -value "adams.flow.source.valuedefinition.DirectoryValueDefinition -name output_dir -display \"Output directory\" -help \"The directory to store the generated DeepLabCut annotations and images.\" -file-chooser-title \"Output dir\" -use-forward-slashes true" -output-type MAP -restoration-enabled true -restoration-file @{restore}
  adams.flow.transformer.MapToVariables
  adams.flow.transformer.SetVariable -name "output file" -var-name output_file -var-value @{output_dir}/@{annotations_file} -expand-value true
 adams.flow.control.Trigger -name process
  adams.flow.standalone.SetVariable -name reset -var-name count -var-value 0
  adams.flow.source.FileSystemSearch -output-array true -search "adams.flow.source.filesystemsearch.LocalFileSearch -directory @{input_dir} -regexp .*\\\\.(jpg|jpeg|png|JPG|JPEG|PNG) -sorting SORT_BY_NAME" -use-forward-slashes true
  adams.flow.control.Tee -name "# files"
   adams.flow.transformer.ArrayLength
   adams.flow.transformer.SetVariable -var-name max
  adams.flow.control.Trigger -name "new collection"
   adams.flow.source.NewCollection
   adams.flow.transformer.SetStorageValue -storage-name reports
  adams.flow.control.Tee -name "iterate files"
   adams.flow.transformer.ArrayToSequence
   adams.flow.control.Tee -name "report file"
    adams.flow.transformer.Convert -conversion "adams.data.conversion.ReplaceFileExtension -extension .report -use-forward-slashes true"
    adams.flow.transformer.SetVariable -var-name report_file
   adams.flow.control.Tee -name progress
    adams.flow.transformer.IncVariable -var-name count -output-variable-value true
    adams.flow.sink.CallableSink -callable ProgressBar
   adams.flow.control.Block -condition "adams.flow.condition.bool.Not -condition \"adams.flow.condition.bool.FileExists -file @{report_file} -generator adams.core.io.NullFilenameGenerator\""
   adams.flow.control.Tee -name "copy image"
    adams.flow.transformer.CopyFile -target-dir @{output_dir}
   adams.flow.control.Trigger -name "load report"
    adams.flow.source.Variable -var-name report_file -conversion adams.data.conversion.StringToString
    adams.flow.transformer.ReportFileReader -reader adams.data.io.input.DefaultSimpleReportReader
    adams.flow.transformer.StorageCollectionInsert -storageName reports -after true
  adams.flow.control.Trigger -name "output annotations"
   adams.flow.source.StorageValue -storage-name reports -conversion adams.data.conversion.UnknownToUnknown
   adams.flow.transformer.CollectionToArray
   adams.flow.transformer.ReportFileWriter -writer "adams.data.io.output.DeepLabCutCSVWriter -file-prefix @{file_prefix} -label @{labels}" -generator "adams.core.io.SimpleFixedFilenameGenerator -name @{output_file}"
 adams.flow.control.CloseCallableDisplay -callable ProgressBar
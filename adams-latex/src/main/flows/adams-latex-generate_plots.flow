# Project: adams
# Date: 2016-02-15 14:35:00
# User: fracpete
# Charset: UTF-8
adams.flow.control.Flow -annotation "Lets the user select a number of images and \\ngenerates LaTeX code from them." -flow-execution-listener adams.flow.execution.NullListener
 adams.flow.standalone.CallableActors
  adams.flow.sink.Display -writer adams.data.io.output.NullWriter
 adams.flow.source.Start
 adams.flow.control.Trigger -name parameters
  adams.flow.source.EnterManyValues -stop-if-canceled true -message "Please enter parameters" -value "adams.flow.source.ValueDefinition -name image_dir -display \"Dir with Images\" -type DIRECTORY_ABSOLUTE -default-value ${EXAMPLE_FLOWS}/data" -value "adams.flow.source.ValueDefinition -name strip_path -display \"Strip path from images\" -type BOOLEAN -default-value true" -value "adams.flow.source.ValueDefinition -name path_prefix -display \"Path prefix to use if stripped\" -default-value images/" -value "adams.flow.source.ValueDefinition -name add_label -display \"Add label\" -type BOOLEAN -default-value true" -value "adams.flow.source.ValueDefinition -name add_caption -display \"Add caption\" -type BOOLEAN -default-value true" -value "adams.flow.source.ValueDefinition -name centered -display \"Center image\" -type BOOLEAN -default-value true" -value "adams.flow.source.ValueDefinition -name use_figure -display \"Use figure\" -type BOOLEAN -default-value true" -value "adams.flow.source.ValueDefinition -name figure_position -display \"Figure position\" -default-value htb" -value "adams.flow.source.ValueDefinition -name image_params -display \"Image parameters\" -help \"Parameters like width can be supplied here\" -default-value width=10.0cm" -value "adams.flow.source.ValueDefinition -name clear_page -display \"Add clear page every X images\" -type INTEGER -default-value 3"
  adams.flow.transformer.SpreadSheetVariableRowIterator
 adams.flow.control.Trigger -name "process images"
  adams.flow.standalone.SetVariable -var-name count -var-value 0
  adams.flow.source.SelectFile -stop-if-canceled true -file-chooser-title "Select images" -initial-dir @{image_dir} -extension png -extension pdf
  adams.flow.control.ConditionalTrigger -name "clear page?" -condition "adams.flow.condition.bool.Expression -expression \"(@{count} % @{clear_page}) = 0\""
   adams.flow.source.CombineVariables -expression \\clearpage
   adams.flow.sink.CallableSink -callable Display
  adams.flow.control.Tee -name "short name"
   adams.flow.transformer.BaseName
   adams.flow.transformer.SetVariable -name "short name with ext" -var-name short_w_ext
   adams.flow.control.ConditionalTee -name "prefixed file name" -condition "adams.flow.condition.bool.Expression -expression \"\\\\\\\"@{path_prefix}\\\\\\\" != \\\\\\\"\\\\\\\"\""
    adams.flow.transformer.PrependDir -prefix @{path_prefix}
    adams.flow.transformer.SetVariable -name "short name with ext" -var-name short_w_ext
   adams.flow.transformer.Convert -conversion adams.data.conversion.ReplaceFileExtension
   adams.flow.transformer.SetVariable -name "short name without ext" -var-name short_wo_ext
  adams.flow.control.ConditionalTrigger -name "figure start" -condition "adams.flow.condition.bool.Expression -expression \"@{use_figure} = true\""
   adams.flow.source.CombineVariables -expression \\begin{figure}[@{figure_position}]
   adams.flow.sink.CallableSink -callable Display
  adams.flow.control.ConditionalTrigger -name centered? -condition "adams.flow.condition.bool.Expression -expression \"@{centered} = true\""
   adams.flow.source.CombineVariables -expression \\centering
   adams.flow.sink.CallableSink -callable Display
  adams.flow.control.Trigger -name image
   adams.flow.source.CombineVariables -expression "\\\\includegraphics[@{image_params}]{@{short_w_ext}} "
   adams.flow.sink.CallableSink -callable Display
  adams.flow.control.ConditionalTrigger -name caption? -condition "adams.flow.condition.bool.Expression -expression \"@{add_caption} = true\""
   adams.flow.source.Variable -var-name short_wo_ext
   adams.flow.transformer.Convert -conversion adams.data.conversion.EscapeLatexCharacters
   adams.flow.transformer.StringReplace -find (.*) -replace \\\\caption{$1}
   adams.flow.sink.CallableSink -callable Display
  adams.flow.control.ConditionalTrigger -name label? -condition "adams.flow.condition.bool.Expression -expression \"@{add_label} = true\""
   adams.flow.source.CombineVariables -expression \\label{@{short_wo_ext}}
   adams.flow.sink.CallableSink -callable Display
  adams.flow.control.ConditionalTrigger -name "figure end" -condition "adams.flow.condition.bool.Expression -expression \"@{use_figure} = true\""
   adams.flow.source.CombineVariables -expression \\end{figure}
   adams.flow.sink.CallableSink -callable Display
  adams.flow.control.Trigger -name separator
   adams.flow.source.CombineVariables
   adams.flow.sink.CallableSink -callable Display
  adams.flow.transformer.IncVariable -var-name count

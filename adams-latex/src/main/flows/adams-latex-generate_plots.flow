# Project: adams
# Date: 2015-11-18 14:06:13
# User: fracpete
# Charset: UTF-8
#
adams.flow.control.Flow
	-annotation
	Lets the user select a number of images and \ngenerates LaTeX code from them.
	-actor
		adams.flow.standalone.CallableActors
			-actor
				adams.flow.sink.Display
					-writer
						adams.data.io.output.NullWriter
	-actor
		adams.flow.source.Start
	-actor
		adams.flow.control.Trigger
			-name
			parameters
			-tee
				adams.flow.source.EnterManyValues
					-stop-if-canceled
					true
					-message
					Please enter parameters
					-value
						adams.flow.source.ValueDefinition
							-name
							image_dir
							-display
							Dir with Images
							-type
							DIRECTORY_ABSOLUTE
							-default-value
							${EXAMPLE_FLOWS}/data
					-value
						adams.flow.source.ValueDefinition
							-name
							strip_path
							-display
							Strip path from images
							-type
							BOOLEAN
							-default-value
							true
					-value
						adams.flow.source.ValueDefinition
							-name
							path_prefix
							-display
							Path prefix to use if stripped
							-default-value
							images/
					-value
						adams.flow.source.ValueDefinition
							-name
							add_label
							-display
							Add label
							-type
							BOOLEAN
							-default-value
							true
					-value
						adams.flow.source.ValueDefinition
							-name
							add_caption
							-display
							Add caption
							-type
							BOOLEAN
							-default-value
							true
					-value
						adams.flow.source.ValueDefinition
							-name
							centered
							-display
							Center image
							-type
							BOOLEAN
							-default-value
							true
					-value
						adams.flow.source.ValueDefinition
							-name
							use_figure
							-display
							Use figure
							-type
							BOOLEAN
							-default-value
							true
					-value
						adams.flow.source.ValueDefinition
							-name
							figure_position
							-display
							Figure position
							-default-value
							htb
					-value
						adams.flow.source.ValueDefinition
							-name
							image_params
							-display
							Image parameters
							-help
							Parameters like width can be supplied here
							-default-value
							width=10.0cm
					-value
						adams.flow.source.ValueDefinition
							-name
							clear_page
							-display
							Add clear page every X images
							-type
							INTEGER
							-default-value
							3
			-tee
				adams.flow.transformer.SpreadSheetVariableRowIterator
	-actor
		adams.flow.control.Trigger
			-name
			process images
			-tee
				adams.flow.standalone.SetVariable
					-var-name
					count
					-var-value
					0
			-tee
				adams.flow.source.SelectFile
					-stop-if-canceled
					true
					-file-chooser-title
					Select images
					-initial-dir
					@{image_dir}
					-extension
					png
					-extension
					pdf
			-tee
				adams.flow.control.ConditionalTrigger
					-name
					clear page?
					-tee
						adams.flow.source.CombineVariables
							-expression
							\\clearpage
					-tee
						adams.flow.sink.CallableSink
							-callable
							Display
					-condition
						adams.flow.condition.bool.Expression
							-expression
							(@{count} % @{clear_page}) = 0
			-tee
				adams.flow.control.Tee
					-name
					short name
					-tee
						adams.flow.transformer.BaseName
					-tee
						adams.flow.transformer.SetVariable
							-name
							short name with ext
							-var-name
							short_w_ext
					-tee
						adams.flow.control.ConditionalTee
							-name
							prefixed file name
							-tee
								adams.flow.transformer.PrependDir
									-prefix
									@{path_prefix}
							-tee
								adams.flow.transformer.SetVariable
									-name
									short name with ext
									-var-name
									short_w_ext
							-condition
								adams.flow.condition.bool.Expression
									-expression
									\"@{path_prefix}\" != \"\"
					-tee
						adams.flow.transformer.Convert
							-conversion
								adams.data.conversion.ReplaceFileExtension
					-tee
						adams.flow.transformer.SetVariable
							-name
							short name without ext
							-var-name
							short_wo_ext
			-tee
				adams.flow.control.ConditionalTrigger
					-name
					figure start
					-tee
						adams.flow.source.CombineVariables
							-expression
							\\begin{figure}[@{figure_position}]
					-tee
						adams.flow.sink.CallableSink
							-callable
							Display
					-condition
						adams.flow.condition.bool.Expression
							-expression
							@{use_figure} = true
			-tee
				adams.flow.control.ConditionalTrigger
					-name
					centered?
					-tee
						adams.flow.source.CombineVariables
							-expression
							\\centering
					-tee
						adams.flow.sink.CallableSink
							-callable
							Display
					-condition
						adams.flow.condition.bool.Expression
							-expression
							@{centered} = true
			-tee
				adams.flow.control.Trigger
					-name
					image
					-tee
						adams.flow.source.CombineVariables
							-expression
							\\includegraphics[@{image_params}]{@{short_w_ext}} 
					-tee
						adams.flow.sink.CallableSink
							-callable
							Display
			-tee
				adams.flow.control.ConditionalTrigger
					-name
					caption?
					-tee
						adams.flow.source.Variable
							-var-name
							short_wo_ext
					-tee
						adams.flow.transformer.Convert
							-conversion
								adams.data.conversion.EscapeLatexCharacters
					-tee
						adams.flow.transformer.StringReplace
							-find
							(.*)
							-replace
							\\\\caption{$1}
					-tee
						adams.flow.sink.CallableSink
							-callable
							Display
					-condition
						adams.flow.condition.bool.Expression
							-expression
							@{add_caption} = true
			-tee
				adams.flow.control.ConditionalTrigger
					-name
					label?
					-tee
						adams.flow.source.CombineVariables
							-expression
							\\label{@{short_wo_ext}}
					-tee
						adams.flow.sink.CallableSink
							-callable
							Display
					-condition
						adams.flow.condition.bool.Expression
							-expression
							@{add_label} = true
			-tee
				adams.flow.control.ConditionalTrigger
					-name
					figure end
					-tee
						adams.flow.source.CombineVariables
							-expression
							\\end{figure}
					-tee
						adams.flow.sink.CallableSink
							-callable
							Display
					-condition
						adams.flow.condition.bool.Expression
							-expression
							@{use_figure} = true
			-tee
				adams.flow.control.Trigger
					-name
					separator
					-tee
						adams.flow.source.CombineVariables
					-tee
						adams.flow.sink.CallableSink
							-callable
							Display
			-tee
				adams.flow.transformer.IncVariable
					-var-name
					count
	-flow-execution-listener
		adams.flow.execution.NullListener

